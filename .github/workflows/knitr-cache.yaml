name: knitr-cache-template
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  rmarkdown:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        r: ['release']
        r-repo: ['https://packagemanager.rstudio.com/all/__linux__/focal/latest']
        cache: ['setup-knitr-cache/knitr-cache_cache']
        cache-hash: ['setup-knitr-cache/knitr-cache.Rmd']
        cache-version: [1]
    # Only runs PR jobs concurrently & uses same group as other ghpages jobs
    # PR jobs run in their own branch & do not deploy anything - so we assume they can run concurrently
    concurrency:
      group: ghpages-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_CONFIG_REPOS_OVERRIDE: ${{ matrix.r-repo }}
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
      - name: Setup R & RSPM
        run: |
          Rscript -e 'dir.create(Sys.getenv("R_LIBS_USER"), recursive = TRUE)'
          echo "options(repos = c(RSPM = '${{ matrix.r-repo }}'))" >> .Rprofile
          echo 'options(HTTPUserAgent = sprintf("R/%s R (%s)", getRversion(), paste(getRversion(), R.version["platform"], R.version["arch"], R.version["os"])))' >> .Rprofile
      - uses: prncevince/actions/setup-renv@v1.1.0
        with:
          type: 'restore'
      - name: Get R and OS version
        id: get-version
        shell: Rscript {0}
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
      - name: Restore knitr cache
        uses: actions/cache@v3
        with:
          path: ${{ matrix.cache }}
          key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ github.workflow }}-${{ github.action }}-${{ matrix.cache-version }}-${{ hashFiles(format('{0}', matrix.cache-hash)) }}
          restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ github.workflow }}-${{ github.action }}-${{ matrix.cache-version }}-
      - name: Build site
        shell: Rscript {0}
        run: rmarkdown::render(output_dir = "docs/", output_file = "index.html", input = "setup-knitr-cache/knitr-cache.Rmd", output_format = "html_document")
      - name: Deploy to GitHub pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: ./docs
          target-folder: .
